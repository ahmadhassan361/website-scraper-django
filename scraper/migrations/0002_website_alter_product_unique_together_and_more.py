# Generated by Django 5.2.1 on 2025-06-11 21:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scraper', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('url', models.URLField()),
                ('is_active', models.BooleanField(default=True)),
                ('scraper_function', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('website', 'link'), ('website', 'sku')},
        ),
        migrations.CreateModel(
            name='ScrapingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('stopped', 'Stopped'), ('paused', 'Paused')], default='pending', max_length=20)),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('total_products_found', models.IntegerField(default=0)),
                ('products_scraped', models.IntegerField(default=0)),
                ('products_updated', models.IntegerField(default=0)),
                ('products_created', models.IntegerField(default=0)),
                ('products_failed', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_processed_index', models.IntegerField(default=0)),
                ('last_processed_url', models.TextField(blank=True, null=True)),
                ('resume_data', models.JSONField(blank=True, default=dict)),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.website')),
            ],
        ),
        migrations.CreateModel(
            name='ScrapingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('product_url', models.TextField(blank=True, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=250, null=True)),
                ('exception_details', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='scraper.scrapingsession')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_running', models.BooleanField(default=False)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('current_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scraper.scrapingsession')),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scraper.website')),
            ],
        ),
    ]
